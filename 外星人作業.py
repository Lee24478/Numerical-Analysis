import numpy as np

f = lambda a,b : 9 - np.exp(np.sqrt(a**2+b**2)/9)*np.sin(np.sqrt(a**2+b**2))

square = f(1,4)+f(2,4)+2*f(1,3)+3*f(2,3)+f(1,2)+2*f(2,2)+f(3,3)+2*f(3,2)+f(4,2)+2*f(3,1)+2*f(4,1)+2*f(3,0)+2*f(4,0)+2*f(3,-1)+2*f(4,-1)+2*f(4,-2)+f(4,-3)+3*f(3,-2)+2*f(3,-3)+2*f(2,-2)+2*f(2,-3)+2*f(1,-2)+2*f(1,-3)+f(0,-2)+f(0,-3)
print('square =%1.4f' %(square/2))

triangle = f(2,4)+f(2,3)+2*f(3,3)+2*f(2,2)+f(1,2)+2*f(3,2)+f(4,2)+2*f(3,1)+2*f(1,1)+2*f(2,0)+f(1,0)+f(3,0)+f(0,-3)+2*f(1,-3)+2*f(2,-3)+2*f(3,-3)+2*f(1,-4)+f(4,-3)+2*f(3,-4)
print('triangle =%1.4f' %(triangle/3))

田 = f(-1,4)+4*f(0,4)+f(1,4)+8*f(-1,3)+16*f(0,3)+2*f(-1,2)+8*f(0,2)+2*f(1,2)+8*f(-1,1)+16*f(0,1)+6*f(-1,0)+8*f(0,0)+8*f(-2,0)+2*f(-3,0)+16*f(0,-1)+16*f(-1,-1)+32*f(-2,-1)+8*f(-3,-1)+4*f(0,-2)+4*f(-1,-2)+8*f(2,-2)+2*f(3,-2)
print('田 =%1.4f' %(田/9))

print('sum =%1.4f' %(square/2+triangle/3+田/9))
